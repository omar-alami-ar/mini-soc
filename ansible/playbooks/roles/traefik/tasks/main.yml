---
- name: Load vault variables
  ansible.builtin.include_vars: vault.yml
  
- name: Install required Python packages for Docker management
  ansible.builtin.package:
    name: 
      - python3-docker
      - python3-jsondiff
    state: present
  become: true
  ignore_errors: true
  register: packages_system_install

- name: Install pip3 if system packages installation failed
  ansible.builtin.package:
    name: python3-pip
    state: present
  become: true
  when: packages_system_install.failed | default(false)

- name: Install Docker and jsondiff Python packages via pip (fallback)
  ansible.builtin.pip:
    name: 
      - docker
      - jsondiff
    state: present
    executable: pip3
    extra_args: --break-system-packages
  become: true
  when: packages_system_install.failed | default(false)

- name: Create Traefik config directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  loop:
    - "{{ traefik_config_dir }}"
    - "{{ traefik_data_dir }}"
    - "{{ traefik_data_dir }}/letsencrypt"

- name: Create Traefik network
  community.docker.docker_network:
    name: "{{ traefik_network }}"
    driver: overlay
    attachable: true
    driver_options:
      encrypted: "true"
    state: present

- name: Generate Traefik static configuration
  ansible.builtin.template:
    src: traefik.yml.j2
    dest: "{{ traefik_config_dir }}/traefik.yml"
    mode: '0644'
  notify: restart traefik

- name: Generate Traefik dynamic configuration
  ansible.builtin.template:
    src: dynamic.yml.j2
    dest: "{{ traefik_config_dir }}/dynamic.yml"
    mode: '0644'
  notify: restart traefik

- name: Generate Traefik Docker Compose file
  ansible.builtin.template:
    src: traefik-stack.yml.j2
    dest: "{{ traefik_config_dir }}/traefik-stack.yml"
    mode: '0644'

- name: Deploy Traefik stack
  community.docker.docker_stack:
    name: traefik
    compose:
      - "{{ traefik_config_dir }}/traefik-stack.yml"
    state: present
  register: traefik_deploy

- name: Wait for Traefik to be ready
  ansible.builtin.wait_for:
    port: 80
    host: "{{ ansible_default_ipv4.address }}"
    delay: 10
    timeout: 60
  when: traefik_deploy.changed