# This is a basic workflow to help you get started with Actions

name: Deploy to swarm

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # build:
  #   runs-on: self-hosted  # Your VM1 runner
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Build indexer image
  #       run: |
  #         sudo docker build -t wazuh-indexer-custom:4.12.0 -f Dockerfile.wazuh-indexer-extended .
          
  #     - name: Build manager image
  #       run: |
  #         sudo docker build -t wazuh-manager-custom:4.12.0 -f Dockerfile.wazuh-manager-extended .
      
  #     - name: Build dashboard image
  #       run: |
  #         sudo docker build -t wazuh-dashboard-custom:4.12.0 -f Dockerfile.wazuh-dashboard-extended .

  # scan:
  #   needs: build
  #   runs-on: self-hosted  # Your VM1 runner
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Scan indexer image
  #       run: |
  #         sudo trivy image wazuh-indexer-custom:4.12.0 --ignore-unfixed --severity HIGH,CRITICAL --exit-code 1 

  #     - name: Scan manager image
  #       run: |
  #         sudo trivy image wazuh-manager-custom:4.12.0 --ignore-unfixed --severity HIGH,CRITICAL --exit-code 1 
      
  #     - name: Scan dashboard image
  #       run: |
  #         sudo trivy image wazuh-dashboard-custom:4.12.0 --ignore-unfixed --severity HIGH,CRITICAL --exit-code 1  
  
  lint:
    # needs: scan
    runs-on: self-hosted  # Your VM1 runner
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run ansible-lint
        run: |
          cd ansible
          ansible-lint playbooks/ --exclude=.ansible-lint-ignore
  
  # deploy:
  #   needs: lint
  #   runs-on: self-hosted  # Your VM1 runner
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Create vault password file
  #       run: |
  #         echo "${{ secrets.ANSIBLE_VAULT_PASSWORD }}" > /tmp/vault_pass
  #         chmod 600 /tmp/vault_pass

  #     - name: Run Ansible playbook
  #       run: |
  #         cd ansible
  #         ansible-playbook -i inventory.ini playbooks/deploy-swarm.yml --vault-password-file /tmp/vault_pass

  #     - name: Clean up vault password file
  #       if: always()
  #       run: |
  #         rm -f /tmp/vault_pass
